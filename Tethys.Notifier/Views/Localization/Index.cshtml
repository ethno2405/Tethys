@model Tethys.Notifier.ViewModels.Localization.LocalizationViewModel
@using Tethys.Notifier.Infrastructure

@{
    ViewBag.Title = "Localization";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@section scripts
{
    <script type="text/javascript" src="~/Scripts/jquery-1.6.4.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.signalR-2.1.1.js"></script>
    <script src="signalr/hubs"></script>

    <script type="text/javascript">
        function clearDropDownById(dropDownId) {
            $('#' + dropDownId).find('option').remove();
        }

        function populateDropDown(dropDownId, values) {
            clearDropDownById(dropDownId);

            if (!values) {
                return;
            }

            var select = document.getElementById(dropDownId);

            for (var i = 0; i < values.length; i++) {
                var option = document.createElement('option');
                option.value = values[i].Name;
                option.innerHTML = values[i].Name;
                select.appendChild(option);
            }
        }

        $(function () {
            var localization = $.connection.localizationHub;
            localization.client.roomsRecieved = function (rooms) {
                populateDropDown('rooms-select', rooms);
                $('#rooms-select').change();
            };

            localization.client.locationsRecieved = function (locations) {
                console.log('locationsRecieved');
                populateDropDown('locations-select', locations);
            };

            $.connection.hub.start().done(function () {
                $('#department-select').change(function () {
                    if (!$(this).val()) {
                        clearDropDownById('rooms-select');
                        clearDropDownById('locations-select');
                        return;
                    }

                    localization.server.getRooms($(this).val())
                });

                $('#rooms-select').change(function () {
                    localization.server.getLocations($(this).val(), $('#department-select').val())
                });
            });
        });
    </script>
}

@using (Html.BeginForm("Index", "Localization", FormMethod.Post, new { id = "localization-form" }))
{
    <div>
        @Html.LabelFor(x => x.DeviceName)
        @Html.TextBoxFor(x => x.DeviceName)
        @Html.ValidationMessageFor(x => x.DeviceName)
    </div>
    <div>
        @Html.LabelFor(x => x.IpAddress)
        @Html.HiddenFor(x => x.IpAddress)
        <span>@Model.IpAddress</span>
    </div>
    <div>
        @Html.LabelFor(x => x.MacAddress)
        @Html.HiddenFor(x => x.MacAddress)
        <span>@Model.MacAddress</span>
    </div>
    <div>
        @Html.LabelFor(x => x.SelectedDepartmentName)
        @Html.DropDownListFor(x => x.SelectedDepartmentName, Model.Departments.AsSelectList(x => x.Name, Model.SelectedDepartmentName), new { id = "department-select" })
        @Html.ValidationMessageFor(x => x.SelectedDepartmentName)
    </div>
    <div>
        @Html.LabelFor(x => x.SelectedRoomName)
        @Html.DropDownListFor(x => x.SelectedRoomName, new SelectListItem[0], new { id = "rooms-select" })
        @Html.ValidationMessageFor(x => x.SelectedRoomName)
    </div>
    <div>
        @Html.LabelFor(x => x.SelectedLocationName)
        @Html.DropDownListFor(x => x.SelectedLocationName, new SelectListItem[0], new { id = "locations-select" })
        @Html.ValidationMessageFor(x => x.SelectedLocationName)
    </div>

    <a href="javascript:document.getElementById('localization-form').submit()">Localize</a>
}